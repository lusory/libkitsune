//
// This file is part of kitsune, licensed under the Apache License, Version 2.0 (the "License").
//
// Copyright (c) 2022-present lusory contributors
//
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: kitsune/proto/v1/machine.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Architecture int32

const (
	Architecture_AARCH64  Architecture = 0
	Architecture_ARM      Architecture = 1
	Architecture_AVR      Architecture = 2
	Architecture_M68K     Architecture = 3
	Architecture_MIPS     Architecture = 4
	Architecture_MIPSEL   Architecture = 5
	Architecture_MIPS64   Architecture = 6
	Architecture_MIPS64EL Architecture = 7
	Architecture_PPC64    Architecture = 8
	Architecture_RISCV64  Architecture = 9
	Architecture_RISCV32  Architecture = 10
	Architecture_RX       Architecture = 11
	Architecture_S390X    Architecture = 12
	Architecture_SPARC    Architecture = 13
	Architecture_SPARC64  Architecture = 14
	Architecture_x86_64   Architecture = 15
	Architecture_XTENSA   Architecture = 16
	Architecture_XTENSAEB Architecture = 17
)

// Enum value maps for Architecture.
var (
	Architecture_name = map[int32]string{
		0:  "AARCH64",
		1:  "ARM",
		2:  "AVR",
		3:  "M68K",
		4:  "MIPS",
		5:  "MIPSEL",
		6:  "MIPS64",
		7:  "MIPS64EL",
		8:  "PPC64",
		9:  "RISCV64",
		10: "RISCV32",
		11: "RX",
		12: "S390X",
		13: "SPARC",
		14: "SPARC64",
		15: "x86_64",
		16: "XTENSA",
		17: "XTENSAEB",
	}
	Architecture_value = map[string]int32{
		"AARCH64":  0,
		"ARM":      1,
		"AVR":      2,
		"M68K":     3,
		"MIPS":     4,
		"MIPSEL":   5,
		"MIPS64":   6,
		"MIPS64EL": 7,
		"PPC64":    8,
		"RISCV64":  9,
		"RISCV32":  10,
		"RX":       11,
		"S390X":    12,
		"SPARC":    13,
		"SPARC64":  14,
		"x86_64":   15,
		"XTENSA":   16,
		"XTENSAEB": 17,
	}
)

func (x Architecture) Enum() *Architecture {
	p := new(Architecture)
	*p = x
	return p
}

func (x Architecture) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Architecture) Descriptor() protoreflect.EnumDescriptor {
	return file_kitsune_proto_v1_machine_proto_enumTypes[0].Descriptor()
}

func (Architecture) Type() protoreflect.EnumType {
	return &file_kitsune_proto_v1_machine_proto_enumTypes[0]
}

func (x Architecture) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Architecture.Descriptor instead.
func (Architecture) EnumDescriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{0}
}

type ACPIAction int32

const (
	ACPIAction_POWERON   ACPIAction = 0
	ACPIAction_POWERDOWN ACPIAction = 1
	ACPIAction_RESET     ACPIAction = 2
)

// Enum value maps for ACPIAction.
var (
	ACPIAction_name = map[int32]string{
		0: "POWERON",
		1: "POWERDOWN",
		2: "RESET",
	}
	ACPIAction_value = map[string]int32{
		"POWERON":   0,
		"POWERDOWN": 1,
		"RESET":     2,
	}
)

func (x ACPIAction) Enum() *ACPIAction {
	p := new(ACPIAction)
	*p = x
	return p
}

func (x ACPIAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACPIAction) Descriptor() protoreflect.EnumDescriptor {
	return file_kitsune_proto_v1_machine_proto_enumTypes[1].Descriptor()
}

func (ACPIAction) Type() protoreflect.EnumType {
	return &file_kitsune_proto_v1_machine_proto_enumTypes[1]
}

func (x ACPIAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACPIAction.Descriptor instead.
func (ACPIAction) EnumDescriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{1}
}

type FindVirtualMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindVirtualMachineRequest) Reset() {
	*x = FindVirtualMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVirtualMachineRequest) ProtoMessage() {}

func (x *FindVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVirtualMachineRequest.ProtoReflect.Descriptor instead.
func (*FindVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{0}
}

func (x *FindVirtualMachineRequest) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type FindVirtualMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *VirtualMachine `protobuf:"bytes,1,opt,name=machine,proto3,oneof" json:"machine,omitempty"`
}

func (x *FindVirtualMachineResponse) Reset() {
	*x = FindVirtualMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindVirtualMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVirtualMachineResponse) ProtoMessage() {}

func (x *FindVirtualMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVirtualMachineResponse.ProtoReflect.Descriptor instead.
func (*FindVirtualMachineResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{1}
}

func (x *FindVirtualMachineResponse) GetMachine() *VirtualMachine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type CreateVirtualMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arch       Architecture `protobuf:"varint,1,opt,name=arch,proto3,enum=kitsune.proto.v1.Architecture" json:"arch,omitempty"`
	MemorySize uint64       `protobuf:"varint,2,opt,name=memorySize,proto3" json:"memorySize,omitempty"`
	Data       *MetadataMap `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *CreateVirtualMachineRequest) Reset() {
	*x = CreateVirtualMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineRequest) ProtoMessage() {}

func (x *CreateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualMachineRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{2}
}

func (x *CreateVirtualMachineRequest) GetArch() Architecture {
	if x != nil {
		return x.Arch
	}
	return Architecture_AARCH64
}

func (x *CreateVirtualMachineRequest) GetMemorySize() uint64 {
	if x != nil {
		return x.MemorySize
	}
	return 0
}

func (x *CreateVirtualMachineRequest) GetData() *MetadataMap {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateVirtualMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MachineOrError:
	//	*CreateVirtualMachineResponse_Machine
	//	*CreateVirtualMachineResponse_Error
	MachineOrError isCreateVirtualMachineResponse_MachineOrError `protobuf_oneof:"machine_or_error"`
}

func (x *CreateVirtualMachineResponse) Reset() {
	*x = CreateVirtualMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineResponse) ProtoMessage() {}

func (x *CreateVirtualMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualMachineResponse.ProtoReflect.Descriptor instead.
func (*CreateVirtualMachineResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{3}
}

func (m *CreateVirtualMachineResponse) GetMachineOrError() isCreateVirtualMachineResponse_MachineOrError {
	if m != nil {
		return m.MachineOrError
	}
	return nil
}

func (x *CreateVirtualMachineResponse) GetMachine() *VirtualMachine {
	if x, ok := x.GetMachineOrError().(*CreateVirtualMachineResponse_Machine); ok {
		return x.Machine
	}
	return nil
}

func (x *CreateVirtualMachineResponse) GetError() *Error {
	if x, ok := x.GetMachineOrError().(*CreateVirtualMachineResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isCreateVirtualMachineResponse_MachineOrError interface {
	isCreateVirtualMachineResponse_MachineOrError()
}

type CreateVirtualMachineResponse_Machine struct {
	Machine *VirtualMachine `protobuf:"bytes,1,opt,name=machine,proto3,oneof"`
}

type CreateVirtualMachineResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CreateVirtualMachineResponse_Machine) isCreateVirtualMachineResponse_MachineOrError() {}

func (*CreateVirtualMachineResponse_Error) isCreateVirtualMachineResponse_MachineOrError() {}

type IsAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IsAliveRequest) Reset() {
	*x = IsAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAliveRequest) ProtoMessage() {}

func (x *IsAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAliveRequest.ProtoReflect.Descriptor instead.
func (*IsAliveRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{4}
}

func (x *IsAliveRequest) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type IsAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alive bool `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
}

func (x *IsAliveResponse) Reset() {
	*x = IsAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAliveResponse) ProtoMessage() {}

func (x *IsAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAliveResponse.ProtoReflect.Descriptor instead.
func (*IsAliveResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{5}
}

func (x *IsAliveResponse) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

type AttachImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *UUID `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Image   *UUID `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *AttachImageRequest) Reset() {
	*x = AttachImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachImageRequest) ProtoMessage() {}

func (x *AttachImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachImageRequest.ProtoReflect.Descriptor instead.
func (*AttachImageRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{6}
}

func (x *AttachImageRequest) GetMachine() *UUID {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *AttachImageRequest) GetImage() *UUID {
	if x != nil {
		return x.Image
	}
	return nil
}

type AttachImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *AttachImageResponse) Reset() {
	*x = AttachImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachImageResponse) ProtoMessage() {}

func (x *AttachImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachImageResponse.ProtoReflect.Descriptor instead.
func (*AttachImageResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{7}
}

func (x *AttachImageResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DetachImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *UUID `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Image   *UUID `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *DetachImageRequest) Reset() {
	*x = DetachImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachImageRequest) ProtoMessage() {}

func (x *DetachImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachImageRequest.ProtoReflect.Descriptor instead.
func (*DetachImageRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{8}
}

func (x *DetachImageRequest) GetMachine() *UUID {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *DetachImageRequest) GetImage() *UUID {
	if x != nil {
		return x.Image
	}
	return nil
}

type DetachImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *DetachImageResponse) Reset() {
	*x = DetachImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachImageResponse) ProtoMessage() {}

func (x *DetachImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachImageResponse.ProtoReflect.Descriptor instead.
func (*DetachImageResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{9}
}

func (x *DetachImageResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SendACPIActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *UUID      `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Action  ACPIAction `protobuf:"varint,2,opt,name=action,proto3,enum=kitsune.proto.v1.ACPIAction" json:"action,omitempty"`
}

func (x *SendACPIActionRequest) Reset() {
	*x = SendACPIActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendACPIActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendACPIActionRequest) ProtoMessage() {}

func (x *SendACPIActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendACPIActionRequest.ProtoReflect.Descriptor instead.
func (*SendACPIActionRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{10}
}

func (x *SendACPIActionRequest) GetMachine() *UUID {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *SendACPIActionRequest) GetAction() ACPIAction {
	if x != nil {
		return x.Action
	}
	return ACPIAction_POWERON
}

type SendACPIActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *SendACPIActionResponse) Reset() {
	*x = SendACPIActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendACPIActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendACPIActionResponse) ProtoMessage() {}

func (x *SendACPIActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendACPIActionResponse.ProtoReflect.Descriptor instead.
func (*SendACPIActionResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{11}
}

func (x *SendACPIActionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type VirtualMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *UUID        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Arch           Architecture `protobuf:"varint,2,opt,name=arch,proto3,enum=kitsune.proto.v1.Architecture" json:"arch,omitempty"`
	AttachedImages []*UUID      `protobuf:"bytes,3,rep,name=attachedImages,proto3" json:"attachedImages,omitempty"`
	MemorySize     uint64       `protobuf:"varint,4,opt,name=memorySize,proto3" json:"memorySize,omitempty"`
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_machine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_machine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachine.ProtoReflect.Descriptor instead.
func (*VirtualMachine) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_machine_proto_rawDescGZIP(), []int{12}
}

func (x *VirtualMachine) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtualMachine) GetArch() Architecture {
	if x != nil {
		return x.Arch
	}
	return Architecture_AARCH64
}

func (x *VirtualMachine) GetAttachedImages() []*UUID {
	if x != nil {
		return x.AttachedImages
	}
	return nil
}

func (x *VirtualMachine) GetMemorySize() uint64 {
	if x != nil {
		return x.MemorySize
	}
	return 0
}

var File_kitsune_proto_v1_machine_proto protoreflect.FileDescriptor

var file_kitsune_proto_v1_machine_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43,
	0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0xb2,
	0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6f,
	0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x0e, 0x49, 0x73, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x27, 0x0a, 0x0f, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x74, 0x0a, 0x12, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x22, 0x53, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x74, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x44,
	0x65, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x7f, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x43, 0x50, 0x49, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74,
	0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x69,
	0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x43, 0x50, 0x49, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x56, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x43, 0x50, 0x49, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x74,
	0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x2a, 0xdd, 0x01, 0x0a, 0x0c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x41, 0x52,
	0x43, 0x48, 0x36, 0x34, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x4d, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x56, 0x52, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x36, 0x38, 0x4b,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x49, 0x50, 0x53, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x49, 0x50, 0x53, 0x45, 0x4c, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x49, 0x50, 0x53,
	0x36, 0x34, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x49, 0x50, 0x53, 0x36, 0x34, 0x45, 0x4c,
	0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x50, 0x43, 0x36, 0x34, 0x10, 0x08, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x49, 0x53, 0x43, 0x56, 0x36, 0x34, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x49,
	0x53, 0x43, 0x56, 0x33, 0x32, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x58, 0x10, 0x0b, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x33, 0x39, 0x30, 0x58, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50,
	0x41, 0x52, 0x43, 0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x41, 0x52, 0x43, 0x36, 0x34,
	0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x78, 0x38, 0x36, 0x5f, 0x36, 0x34, 0x10, 0x0f, 0x12, 0x0a,
	0x0a, 0x06, 0x58, 0x54, 0x45, 0x4e, 0x53, 0x41, 0x10, 0x10, 0x12, 0x0c, 0x0a, 0x08, 0x58, 0x54,
	0x45, 0x4e, 0x53, 0x41, 0x45, 0x42, 0x10, 0x11, 0x2a, 0x33, 0x0a, 0x0a, 0x41, 0x43, 0x50, 0x49,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x4f,
	0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x44, 0x4f, 0x57, 0x4e,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x02, 0x32, 0xfe, 0x06,
	0x0a, 0x1d, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e,
	0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x30,
	0x01, 0x12, 0x6f, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x75, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2d, 0x2e, 0x6b, 0x69, 0x74,
	0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6b, 0x69, 0x74, 0x73,
	0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x49, 0x73, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x69, 0x74,
	0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x43, 0x50, 0x49, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x43, 0x50, 0x49, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x43, 0x50, 0x49, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x69,
	0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38,
	0x0a, 0x10, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x75, 0x73, 0x6f, 0x72, 0x79, 0x2f, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kitsune_proto_v1_machine_proto_rawDescOnce sync.Once
	file_kitsune_proto_v1_machine_proto_rawDescData = file_kitsune_proto_v1_machine_proto_rawDesc
)

func file_kitsune_proto_v1_machine_proto_rawDescGZIP() []byte {
	file_kitsune_proto_v1_machine_proto_rawDescOnce.Do(func() {
		file_kitsune_proto_v1_machine_proto_rawDescData = protoimpl.X.CompressGZIP(file_kitsune_proto_v1_machine_proto_rawDescData)
	})
	return file_kitsune_proto_v1_machine_proto_rawDescData
}

var file_kitsune_proto_v1_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kitsune_proto_v1_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_kitsune_proto_v1_machine_proto_goTypes = []interface{}{
	(Architecture)(0),                    // 0: kitsune.proto.v1.Architecture
	(ACPIAction)(0),                      // 1: kitsune.proto.v1.ACPIAction
	(*FindVirtualMachineRequest)(nil),    // 2: kitsune.proto.v1.FindVirtualMachineRequest
	(*FindVirtualMachineResponse)(nil),   // 3: kitsune.proto.v1.FindVirtualMachineResponse
	(*CreateVirtualMachineRequest)(nil),  // 4: kitsune.proto.v1.CreateVirtualMachineRequest
	(*CreateVirtualMachineResponse)(nil), // 5: kitsune.proto.v1.CreateVirtualMachineResponse
	(*IsAliveRequest)(nil),               // 6: kitsune.proto.v1.IsAliveRequest
	(*IsAliveResponse)(nil),              // 7: kitsune.proto.v1.IsAliveResponse
	(*AttachImageRequest)(nil),           // 8: kitsune.proto.v1.AttachImageRequest
	(*AttachImageResponse)(nil),          // 9: kitsune.proto.v1.AttachImageResponse
	(*DetachImageRequest)(nil),           // 10: kitsune.proto.v1.DetachImageRequest
	(*DetachImageResponse)(nil),          // 11: kitsune.proto.v1.DetachImageResponse
	(*SendACPIActionRequest)(nil),        // 12: kitsune.proto.v1.SendACPIActionRequest
	(*SendACPIActionResponse)(nil),       // 13: kitsune.proto.v1.SendACPIActionResponse
	(*VirtualMachine)(nil),               // 14: kitsune.proto.v1.VirtualMachine
	(*UUID)(nil),                         // 15: kitsune.proto.v1.UUID
	(*MetadataMap)(nil),                  // 16: kitsune.proto.v1.MetadataMap
	(*Error)(nil),                        // 17: kitsune.proto.v1.Error
	(*emptypb.Empty)(nil),                // 18: google.protobuf.Empty
	(*GetMetadataRequest)(nil),           // 19: kitsune.proto.v1.GetMetadataRequest
	(*SetMetadataRequest)(nil),           // 20: kitsune.proto.v1.SetMetadataRequest
	(*GetMetadataResponse)(nil),          // 21: kitsune.proto.v1.GetMetadataResponse
	(*SetMetadataResponse)(nil),          // 22: kitsune.proto.v1.SetMetadataResponse
}
var file_kitsune_proto_v1_machine_proto_depIdxs = []int32{
	15, // 0: kitsune.proto.v1.FindVirtualMachineRequest.id:type_name -> kitsune.proto.v1.UUID
	14, // 1: kitsune.proto.v1.FindVirtualMachineResponse.machine:type_name -> kitsune.proto.v1.VirtualMachine
	0,  // 2: kitsune.proto.v1.CreateVirtualMachineRequest.arch:type_name -> kitsune.proto.v1.Architecture
	16, // 3: kitsune.proto.v1.CreateVirtualMachineRequest.data:type_name -> kitsune.proto.v1.MetadataMap
	14, // 4: kitsune.proto.v1.CreateVirtualMachineResponse.machine:type_name -> kitsune.proto.v1.VirtualMachine
	17, // 5: kitsune.proto.v1.CreateVirtualMachineResponse.error:type_name -> kitsune.proto.v1.Error
	15, // 6: kitsune.proto.v1.IsAliveRequest.id:type_name -> kitsune.proto.v1.UUID
	15, // 7: kitsune.proto.v1.AttachImageRequest.machine:type_name -> kitsune.proto.v1.UUID
	15, // 8: kitsune.proto.v1.AttachImageRequest.image:type_name -> kitsune.proto.v1.UUID
	17, // 9: kitsune.proto.v1.AttachImageResponse.error:type_name -> kitsune.proto.v1.Error
	15, // 10: kitsune.proto.v1.DetachImageRequest.machine:type_name -> kitsune.proto.v1.UUID
	15, // 11: kitsune.proto.v1.DetachImageRequest.image:type_name -> kitsune.proto.v1.UUID
	17, // 12: kitsune.proto.v1.DetachImageResponse.error:type_name -> kitsune.proto.v1.Error
	15, // 13: kitsune.proto.v1.SendACPIActionRequest.machine:type_name -> kitsune.proto.v1.UUID
	1,  // 14: kitsune.proto.v1.SendACPIActionRequest.action:type_name -> kitsune.proto.v1.ACPIAction
	17, // 15: kitsune.proto.v1.SendACPIActionResponse.error:type_name -> kitsune.proto.v1.Error
	15, // 16: kitsune.proto.v1.VirtualMachine.id:type_name -> kitsune.proto.v1.UUID
	0,  // 17: kitsune.proto.v1.VirtualMachine.arch:type_name -> kitsune.proto.v1.Architecture
	15, // 18: kitsune.proto.v1.VirtualMachine.attachedImages:type_name -> kitsune.proto.v1.UUID
	18, // 19: kitsune.proto.v1.VirtualMachineRegistryService.GetVirtualMachines:input_type -> google.protobuf.Empty
	2,  // 20: kitsune.proto.v1.VirtualMachineRegistryService.FindVirtualMachine:input_type -> kitsune.proto.v1.FindVirtualMachineRequest
	4,  // 21: kitsune.proto.v1.VirtualMachineRegistryService.CreateVirtualMachine:input_type -> kitsune.proto.v1.CreateVirtualMachineRequest
	6,  // 22: kitsune.proto.v1.VirtualMachineRegistryService.IsAlive:input_type -> kitsune.proto.v1.IsAliveRequest
	8,  // 23: kitsune.proto.v1.VirtualMachineRegistryService.AttachImage:input_type -> kitsune.proto.v1.AttachImageRequest
	10, // 24: kitsune.proto.v1.VirtualMachineRegistryService.DetachImage:input_type -> kitsune.proto.v1.DetachImageRequest
	12, // 25: kitsune.proto.v1.VirtualMachineRegistryService.SendACPIAction:input_type -> kitsune.proto.v1.SendACPIActionRequest
	19, // 26: kitsune.proto.v1.VirtualMachineRegistryService.GetMetadata:input_type -> kitsune.proto.v1.GetMetadataRequest
	20, // 27: kitsune.proto.v1.VirtualMachineRegistryService.SetMetadata:input_type -> kitsune.proto.v1.SetMetadataRequest
	14, // 28: kitsune.proto.v1.VirtualMachineRegistryService.GetVirtualMachines:output_type -> kitsune.proto.v1.VirtualMachine
	3,  // 29: kitsune.proto.v1.VirtualMachineRegistryService.FindVirtualMachine:output_type -> kitsune.proto.v1.FindVirtualMachineResponse
	5,  // 30: kitsune.proto.v1.VirtualMachineRegistryService.CreateVirtualMachine:output_type -> kitsune.proto.v1.CreateVirtualMachineResponse
	7,  // 31: kitsune.proto.v1.VirtualMachineRegistryService.IsAlive:output_type -> kitsune.proto.v1.IsAliveResponse
	9,  // 32: kitsune.proto.v1.VirtualMachineRegistryService.AttachImage:output_type -> kitsune.proto.v1.AttachImageResponse
	11, // 33: kitsune.proto.v1.VirtualMachineRegistryService.DetachImage:output_type -> kitsune.proto.v1.DetachImageResponse
	13, // 34: kitsune.proto.v1.VirtualMachineRegistryService.SendACPIAction:output_type -> kitsune.proto.v1.SendACPIActionResponse
	21, // 35: kitsune.proto.v1.VirtualMachineRegistryService.GetMetadata:output_type -> kitsune.proto.v1.GetMetadataResponse
	22, // 36: kitsune.proto.v1.VirtualMachineRegistryService.SetMetadata:output_type -> kitsune.proto.v1.SetMetadataResponse
	28, // [28:37] is the sub-list for method output_type
	19, // [19:28] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_kitsune_proto_v1_machine_proto_init() }
func file_kitsune_proto_v1_machine_proto_init() {
	if File_kitsune_proto_v1_machine_proto != nil {
		return
	}
	file_kitsune_proto_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kitsune_proto_v1_machine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindVirtualMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindVirtualMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendACPIActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendACPIActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_machine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kitsune_proto_v1_machine_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_kitsune_proto_v1_machine_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_kitsune_proto_v1_machine_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CreateVirtualMachineResponse_Machine)(nil),
		(*CreateVirtualMachineResponse_Error)(nil),
	}
	file_kitsune_proto_v1_machine_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_kitsune_proto_v1_machine_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_kitsune_proto_v1_machine_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kitsune_proto_v1_machine_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kitsune_proto_v1_machine_proto_goTypes,
		DependencyIndexes: file_kitsune_proto_v1_machine_proto_depIdxs,
		EnumInfos:         file_kitsune_proto_v1_machine_proto_enumTypes,
		MessageInfos:      file_kitsune_proto_v1_machine_proto_msgTypes,
	}.Build()
	File_kitsune_proto_v1_machine_proto = out.File
	file_kitsune_proto_v1_machine_proto_rawDesc = nil
	file_kitsune_proto_v1_machine_proto_goTypes = nil
	file_kitsune_proto_v1_machine_proto_depIdxs = nil
}
