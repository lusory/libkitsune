//
// This file is part of kitsune, licensed under the Apache License, Version 2.0 (the "License").
//
// Copyright (c) 2022-present lusory contributors
//
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: kitsune/proto/v1/image.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Image_Media int32

const (
	Image_DISK  Image_Media = 0
	Image_CDROM Image_Media = 1
)

// Enum value maps for Image_Media.
var (
	Image_Media_name = map[int32]string{
		0: "DISK",
		1: "CDROM",
	}
	Image_Media_value = map[string]int32{
		"DISK":  0,
		"CDROM": 1,
	}
)

func (x Image_Media) Enum() *Image_Media {
	p := new(Image_Media)
	*p = x
	return p
}

func (x Image_Media) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Image_Media) Descriptor() protoreflect.EnumDescriptor {
	return file_kitsune_proto_v1_image_proto_enumTypes[0].Descriptor()
}

func (Image_Media) Type() protoreflect.EnumType {
	return &file_kitsune_proto_v1_image_proto_enumTypes[0]
}

func (x Image_Media) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Image_Media.Descriptor instead.
func (Image_Media) EnumDescriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{6, 0}
}

type Image_Format int32

const (
	Image_RAW       Image_Format = 0
	Image_QCOW2     Image_Format = 1
	Image_QCOW      Image_Format = 2
	Image_QED       Image_Format = 3
	Image_LUKS      Image_Format = 4
	Image_VDI       Image_Format = 5
	Image_VMDK      Image_Format = 6
	Image_VPC       Image_Format = 7
	Image_VHDX      Image_Format = 8
	Image_CLOOP     Image_Format = 9
	Image_BOCHS     Image_Format = 10
	Image_DMG       Image_Format = 11
	Image_PARALLELS Image_Format = 12
)

// Enum value maps for Image_Format.
var (
	Image_Format_name = map[int32]string{
		0:  "RAW",
		1:  "QCOW2",
		2:  "QCOW",
		3:  "QED",
		4:  "LUKS",
		5:  "VDI",
		6:  "VMDK",
		7:  "VPC",
		8:  "VHDX",
		9:  "CLOOP",
		10: "BOCHS",
		11: "DMG",
		12: "PARALLELS",
	}
	Image_Format_value = map[string]int32{
		"RAW":       0,
		"QCOW2":     1,
		"QCOW":      2,
		"QED":       3,
		"LUKS":      4,
		"VDI":       5,
		"VMDK":      6,
		"VPC":       7,
		"VHDX":      8,
		"CLOOP":     9,
		"BOCHS":     10,
		"DMG":       11,
		"PARALLELS": 12,
	}
)

func (x Image_Format) Enum() *Image_Format {
	p := new(Image_Format)
	*p = x
	return p
}

func (x Image_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Image_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_kitsune_proto_v1_image_proto_enumTypes[1].Descriptor()
}

func (Image_Format) Type() protoreflect.EnumType {
	return &file_kitsune_proto_v1_image_proto_enumTypes[1]
}

func (x Image_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Image_Format.Descriptor instead.
func (Image_Format) EnumDescriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{6, 1}
}

type FindImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindImageRequest) Reset() {
	*x = FindImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_image_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindImageRequest) ProtoMessage() {}

func (x *FindImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_image_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindImageRequest.ProtoReflect.Descriptor instead.
func (*FindImageRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{0}
}

func (x *FindImageRequest) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type FindImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *Image `protobuf:"bytes,1,opt,name=image,proto3,oneof" json:"image,omitempty"`
}

func (x *FindImageResponse) Reset() {
	*x = FindImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_image_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindImageResponse) ProtoMessage() {}

func (x *FindImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_image_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindImageResponse.ProtoReflect.Descriptor instead.
func (*FindImageResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{1}
}

func (x *FindImageResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type CreateImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format Image_Format `protobuf:"varint,1,opt,name=format,proto3,enum=kitsune.proto.v1.Image_Format" json:"format,omitempty"`
	Size   uint64       `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Data   *MetadataMap `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *CreateImageRequest) Reset() {
	*x = CreateImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_image_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageRequest) ProtoMessage() {}

func (x *CreateImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_image_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageRequest.ProtoReflect.Descriptor instead.
func (*CreateImageRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{2}
}

func (x *CreateImageRequest) GetFormat() Image_Format {
	if x != nil {
		return x.Format
	}
	return Image_RAW
}

func (x *CreateImageRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateImageRequest) GetData() *MetadataMap {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ImageOrError:
	//	*CreateImageResponse_Image
	//	*CreateImageResponse_Error
	ImageOrError isCreateImageResponse_ImageOrError `protobuf_oneof:"image_or_error"`
}

func (x *CreateImageResponse) Reset() {
	*x = CreateImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_image_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResponse) ProtoMessage() {}

func (x *CreateImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_image_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResponse.ProtoReflect.Descriptor instead.
func (*CreateImageResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{3}
}

func (m *CreateImageResponse) GetImageOrError() isCreateImageResponse_ImageOrError {
	if m != nil {
		return m.ImageOrError
	}
	return nil
}

func (x *CreateImageResponse) GetImage() *Image {
	if x, ok := x.GetImageOrError().(*CreateImageResponse_Image); ok {
		return x.Image
	}
	return nil
}

func (x *CreateImageResponse) GetError() *Error {
	if x, ok := x.GetImageOrError().(*CreateImageResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isCreateImageResponse_ImageOrError interface {
	isCreateImageResponse_ImageOrError()
}

type CreateImageResponse_Image struct {
	Image *Image `protobuf:"bytes,1,opt,name=image,proto3,oneof"`
}

type CreateImageResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CreateImageResponse_Image) isCreateImageResponse_ImageOrError() {}

func (*CreateImageResponse_Error) isCreateImageResponse_ImageOrError() {}

type DeleteImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_image_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_image_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteImageRequest) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *DeleteImageResponse) Reset() {
	*x = DeleteImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_image_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResponse) ProtoMessage() {}

func (x *DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_image_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteImageResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *UUID        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Format    Image_Format `protobuf:"varint,2,opt,name=format,proto3,enum=kitsune.proto.v1.Image_Format" json:"format,omitempty"`
	Size      uint64       `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ReadOnly  bool         `protobuf:"varint,4,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	MediaType Image_Media  `protobuf:"varint,5,opt,name=mediaType,proto3,enum=kitsune.proto.v1.Image_Media" json:"mediaType,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kitsune_proto_v1_image_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_kitsune_proto_v1_image_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_kitsune_proto_v1_image_proto_rawDescGZIP(), []int{6}
}

func (x *Image) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Image) GetFormat() Image_Format {
	if x != nil {
		return x.Format
	}
	return Image_RAW
}

func (x *Image) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Image) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *Image) GetMediaType() Image_Media {
	if x != nil {
		return x.MediaType
	}
	return Image_DISK
}

var File_kitsune_proto_v1_image_proto protoreflect.FileDescriptor

var file_kitsune_proto_v1_image_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x10,
	0x46, 0x69, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x36,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b,
	0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x89, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x82,
	0x03, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x36, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6b, 0x69,
	0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x49, 0x53, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x44, 0x52, 0x4f,
	0x4d, 0x10, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x07,
	0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x43, 0x4f, 0x57, 0x32,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x51, 0x43, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x51, 0x45, 0x44, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x55, 0x4b, 0x53, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x56, 0x44, 0x49, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x4d, 0x44, 0x4b,
	0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x50, 0x43, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x56,
	0x48, 0x44, 0x58, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x4f, 0x50, 0x10, 0x09,
	0x12, 0x09, 0x0a, 0x05, 0x42, 0x4f, 0x43, 0x48, 0x53, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x44,
	0x4d, 0x47, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41, 0x52, 0x41, 0x4c, 0x4c, 0x45, 0x4c,
	0x53, 0x10, 0x0c, 0x32, 0x9c, 0x04, 0x0a, 0x14, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x17, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x09,
	0x46, 0x69, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6b, 0x69, 0x74, 0x73,
	0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e,
	0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x74, 0x73,
	0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x2e, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6b, 0x69,
	0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x38, 0x0a, 0x10, 0x6b, 0x69, 0x74, 0x73, 0x75, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x73, 0x6f, 0x72, 0x79, 0x2f, 0x6b, 0x69, 0x74, 0x73,
	0x75, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kitsune_proto_v1_image_proto_rawDescOnce sync.Once
	file_kitsune_proto_v1_image_proto_rawDescData = file_kitsune_proto_v1_image_proto_rawDesc
)

func file_kitsune_proto_v1_image_proto_rawDescGZIP() []byte {
	file_kitsune_proto_v1_image_proto_rawDescOnce.Do(func() {
		file_kitsune_proto_v1_image_proto_rawDescData = protoimpl.X.CompressGZIP(file_kitsune_proto_v1_image_proto_rawDescData)
	})
	return file_kitsune_proto_v1_image_proto_rawDescData
}

var file_kitsune_proto_v1_image_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kitsune_proto_v1_image_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kitsune_proto_v1_image_proto_goTypes = []interface{}{
	(Image_Media)(0),            // 0: kitsune.proto.v1.Image.Media
	(Image_Format)(0),           // 1: kitsune.proto.v1.Image.Format
	(*FindImageRequest)(nil),    // 2: kitsune.proto.v1.FindImageRequest
	(*FindImageResponse)(nil),   // 3: kitsune.proto.v1.FindImageResponse
	(*CreateImageRequest)(nil),  // 4: kitsune.proto.v1.CreateImageRequest
	(*CreateImageResponse)(nil), // 5: kitsune.proto.v1.CreateImageResponse
	(*DeleteImageRequest)(nil),  // 6: kitsune.proto.v1.DeleteImageRequest
	(*DeleteImageResponse)(nil), // 7: kitsune.proto.v1.DeleteImageResponse
	(*Image)(nil),               // 8: kitsune.proto.v1.Image
	(*UUID)(nil),                // 9: kitsune.proto.v1.UUID
	(*MetadataMap)(nil),         // 10: kitsune.proto.v1.MetadataMap
	(*Error)(nil),               // 11: kitsune.proto.v1.Error
	(*emptypb.Empty)(nil),       // 12: google.protobuf.Empty
	(*GetMetadataRequest)(nil),  // 13: kitsune.proto.v1.GetMetadataRequest
	(*SetMetadataRequest)(nil),  // 14: kitsune.proto.v1.SetMetadataRequest
	(*GetMetadataResponse)(nil), // 15: kitsune.proto.v1.GetMetadataResponse
	(*SetMetadataResponse)(nil), // 16: kitsune.proto.v1.SetMetadataResponse
}
var file_kitsune_proto_v1_image_proto_depIdxs = []int32{
	9,  // 0: kitsune.proto.v1.FindImageRequest.id:type_name -> kitsune.proto.v1.UUID
	8,  // 1: kitsune.proto.v1.FindImageResponse.image:type_name -> kitsune.proto.v1.Image
	1,  // 2: kitsune.proto.v1.CreateImageRequest.format:type_name -> kitsune.proto.v1.Image.Format
	10, // 3: kitsune.proto.v1.CreateImageRequest.data:type_name -> kitsune.proto.v1.MetadataMap
	8,  // 4: kitsune.proto.v1.CreateImageResponse.image:type_name -> kitsune.proto.v1.Image
	11, // 5: kitsune.proto.v1.CreateImageResponse.error:type_name -> kitsune.proto.v1.Error
	9,  // 6: kitsune.proto.v1.DeleteImageRequest.id:type_name -> kitsune.proto.v1.UUID
	11, // 7: kitsune.proto.v1.DeleteImageResponse.error:type_name -> kitsune.proto.v1.Error
	9,  // 8: kitsune.proto.v1.Image.id:type_name -> kitsune.proto.v1.UUID
	1,  // 9: kitsune.proto.v1.Image.format:type_name -> kitsune.proto.v1.Image.Format
	0,  // 10: kitsune.proto.v1.Image.mediaType:type_name -> kitsune.proto.v1.Image.Media
	12, // 11: kitsune.proto.v1.ImageRegistryService.GetImages:input_type -> google.protobuf.Empty
	2,  // 12: kitsune.proto.v1.ImageRegistryService.FindImage:input_type -> kitsune.proto.v1.FindImageRequest
	4,  // 13: kitsune.proto.v1.ImageRegistryService.CreateImage:input_type -> kitsune.proto.v1.CreateImageRequest
	6,  // 14: kitsune.proto.v1.ImageRegistryService.DeleteImage:input_type -> kitsune.proto.v1.DeleteImageRequest
	13, // 15: kitsune.proto.v1.ImageRegistryService.GetMetadata:input_type -> kitsune.proto.v1.GetMetadataRequest
	14, // 16: kitsune.proto.v1.ImageRegistryService.SetMetadata:input_type -> kitsune.proto.v1.SetMetadataRequest
	8,  // 17: kitsune.proto.v1.ImageRegistryService.GetImages:output_type -> kitsune.proto.v1.Image
	3,  // 18: kitsune.proto.v1.ImageRegistryService.FindImage:output_type -> kitsune.proto.v1.FindImageResponse
	5,  // 19: kitsune.proto.v1.ImageRegistryService.CreateImage:output_type -> kitsune.proto.v1.CreateImageResponse
	7,  // 20: kitsune.proto.v1.ImageRegistryService.DeleteImage:output_type -> kitsune.proto.v1.DeleteImageResponse
	15, // 21: kitsune.proto.v1.ImageRegistryService.GetMetadata:output_type -> kitsune.proto.v1.GetMetadataResponse
	16, // 22: kitsune.proto.v1.ImageRegistryService.SetMetadata:output_type -> kitsune.proto.v1.SetMetadataResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_kitsune_proto_v1_image_proto_init() }
func file_kitsune_proto_v1_image_proto_init() {
	if File_kitsune_proto_v1_image_proto != nil {
		return
	}
	file_kitsune_proto_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kitsune_proto_v1_image_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_image_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_image_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_image_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_image_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_image_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kitsune_proto_v1_image_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kitsune_proto_v1_image_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_kitsune_proto_v1_image_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_kitsune_proto_v1_image_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CreateImageResponse_Image)(nil),
		(*CreateImageResponse_Error)(nil),
	}
	file_kitsune_proto_v1_image_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kitsune_proto_v1_image_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kitsune_proto_v1_image_proto_goTypes,
		DependencyIndexes: file_kitsune_proto_v1_image_proto_depIdxs,
		EnumInfos:         file_kitsune_proto_v1_image_proto_enumTypes,
		MessageInfos:      file_kitsune_proto_v1_image_proto_msgTypes,
	}.Build()
	File_kitsune_proto_v1_image_proto = out.File
	file_kitsune_proto_v1_image_proto_rawDesc = nil
	file_kitsune_proto_v1_image_proto_goTypes = nil
	file_kitsune_proto_v1_image_proto_depIdxs = nil
}
